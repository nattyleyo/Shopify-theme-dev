<div class="slideShow" data-autoplay="{{ settings.autoplay }}" data-delay="{{ settings.delay | times : 1000 }}" 
  data-slideshow-id="{{ slideShowId }}">
  <div class="img-slides">
    {% for block in blocks %}
      {% if block.type == "slide" %}
        {% if block.settings.slide_image != blank %}
          <img
            src="{{ block.settings.slide_image | image_url: width: 800 }}"
            loading="lazy"
            width="auto"
            height="auto"
            alt="{{ block.settings.slide_image.alt | escape }}"
            class="image-wear {% if forloop.first %}active{% endif %}"
            data-index="{{ forloop.index0 }}"
          />
      {% else %}
        <div class="image-4" style="background: #f5f5f5; height: 500px;"></div>
      {% endif %}
    {% endif %}
    {% endfor %}
  </div>

  <div class="buttons">
    <div class="dot-11 left-arrow" onclick="prevSlide()">
      {{ "icon-arrow-left.svg" | asset_url | img_tag: 'Left arrow', "frame-style-4" }}
    </div>
    <div class="dot-11 right-arrow" onclick="nextSlide()">
      {{ "icon-arrow-right.svg" | asset_url | img_tag: 'Right arrow', "frame-style-4" }}
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Initialize each slideshow separately
    document.querySelectorAll('.slideShow[data-slideshow-id]').forEach(slideshow => {
      const slideShowId = slideshow.dataset.slideshowId;
      const slides = slideshow.querySelectorAll('.img-slides .image-wear');
      
      if (slides.length <= 1) return;
      
      console.log(`Initializing slideshow: ${slideShowId} with ${slides.length} slides`);
      
      let currentIndex = 0;
      const totalSlides = slides.length;
      const autoplay = slideshow.dataset.autoplay === 'true';
      const normalDelay = parseInt(slideshow.dataset.delay) || 5000;
      const loopDelay = 1000;
      let autoplayInterval;
      
      // Initialize first slide
      slides[currentIndex].classList.add('active');
      
      function transitionSlides(newIndex) {
        slides[currentIndex].classList.remove('active');
        slides[newIndex].classList.add('active');
        currentIndex = newIndex;
      }
      
      // Create unique function names for this slideshow
      const nextSlideFn = `nextSlide_${slideShowId}`;
      const prevSlideFn = `prevSlide_${slideShowId}`;
      
      window[nextSlideFn] = function() {
        const newIndex = (currentIndex + 1) % totalSlides;
        transitionSlides(newIndex);
        resetAutoplay(newIndex);
      };
      
      window[prevSlideFn] = function() {
        const newIndex = (currentIndex - 1 + totalSlides) % totalSlides;
        transitionSlides(newIndex);
        resetAutoplay(newIndex);
      };
      
      // Update button click handlers
      slideshow.querySelector('.left-arrow').onclick = window[prevSlideFn];
      slideshow.querySelector('.right-arrow').onclick = window[nextSlideFn];
      
      // Autoplay functionality
      function startAutoplay(delay) {
        if (autoplay) {
          autoplayInterval = setInterval(window[nextSlideFn], delay);
        }
      }
      
      function stopAutoplay() {
        clearInterval(autoplayInterval);
      }
      
      function resetAutoplay(newIndex) {
        stopAutoplay();
        const isLooping = newIndex === 0;
        startAutoplay(isLooping ? loopDelay : normalDelay);
      }
      
      // Initialize autoplay
      startAutoplay(normalDelay);
      
      // Pause on hover
      slideshow.addEventListener('mouseenter', stopAutoplay);
      slideshow.addEventListener('mouseleave', () => startAutoplay(normalDelay));
    });
    
    // Optional: Global keyboard navigation for active slideshow
    document.addEventListener('keydown', function(e) {
      const activeSlideshow = document.querySelector('.slideShow:hover');
      if (!activeSlideshow) return;
      
      const slideShowId = activeSlideshow.dataset.slideshowId;
      if (e.key === 'ArrowLeft') window[`prevSlide_${slideShowId}`]();
      if (e.key === 'ArrowRight') window[`nextSlide_${slideShowId}`]();
    });
  });
  </script>

<style>
  /* Add this to your existing CSS without changing your classes */
  .img-slides .image-wear {
    display: none;
    transition: opacity 0.5s ease;
  }
  
  .img-slides .image-wear.active {
    display: block;
    animation: fadeIn 0.5s ease;
  }
  
  @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }
  
  /* Existing button styles remain unchanged */
  .buttons .dot-11 {
    cursor: pointer;
  }
</style>
{% comment %}
  Renders a top selling products section with dynamic color variant selection

  Accepts:
  - collection: {Object} Collection Liquid object (from section settings)
  - section_title: {String} Title for the section
  - products_limit: {Number} Limit of products to display
{% endcomment %}

{% assign collection = collections[section.settings.collection] %}

{% if collection != blank %}
  <div class="color-box title-bb">
    <div class="title-style">{{ section.settings.section_title }}</div>
    <a href="{{ routes.all_products_collection_url }}" class="label-style-5">View All</a>
  </div>
  <div class="cate-list">
    <div class="list-2">
      {% for product in collection.products limit: section.settings.products_limit %}
        <a href="{{ product.url }}" class="pr-card" data-product-id="{{ product.id }}">
          <div class="img-box">
            {% if product.tags contains 'new' %}
              <div class="tag">
                <div class="label-style-6">NEW!</div>
              </div>
            {% elsif product.tags contains 'best-selling' %}
              <div class="tag-2">
                <div class="label-style-7">Best Seller</div>
              </div>
            {% elsif product.tags contains 'most-popular' %}
              <div class="tag-3">
                <div class="label-style-6">Most-Popular</div>
              </div>
            {% endif %}
            <img
              src="{{ product.featured_image | img_url: 'medium' }}"
              alt="{{ product.title }}"
              class="product-img"
              loading="lazy"
              width="260"
              height="230"
              data-variant-image
            />
          </div>
          <div class="content-box">
            <div class="review-no-box">
              {% if product.metafields.reviews.rating.value %}
                <div class="star-rating">
                  {% assign rating = product.metafields.reviews.rating.value.rating | round: 1 %}
                  {% assign max_rating = product.metafields.reviews.rating.value.scale_max | default: 5 %}
                  {% assign percentage = rating | divided_by: max_rating | times: 100 %}
                  <div class="stars-outer">
                    <div class="stars-inner" style="width: {{ percentage }}%"></div>
                  </div>
                  <span class="rating-value">{{ rating | round: 1 }}</span>
                </div>
              {% endif %}
              <div class="review-no">
                {% if product.metafields.reviews.rating_count %}
                  {{ product.metafields.reviews.rating_count }} Reviews
                {% else %}
                  No reviews yet
                {% endif %}
              </div>
            </div>
            
            <div class="color-box">
              <div class="title-style-5">Color</div>
              <div class="frame-144">
                {% assign color_option_index = 0 %}
                {% for option in product.options_with_values %}
                  {% if option.name == 'Color' %}
                    {% assign color_option_index = forloop.index0 %}
                  {% endif %}
                {% endfor %}
                {% assign colors_displayed = '' %}
                {% for variant in product.variants %}
                  {% assign color = variant.options[color_option_index] %}
                  {% unless colors_displayed contains color %}
                    {% assign colors_displayed = colors_displayed | append: color | append: ',' %}
                    <div 
                      class="dot-3 color-dot {% if forloop.first %}active{% endif %}" 
                      title="{{ color }}" 
                      style="background: {{ color }}; width:16px !important; height:16px !important; border-radius:100%" 
                      data-variant-id="{{ variant.id }}"
                      data-image="{{ variant.image | img_url: 'medium' }}"
                      data-price="{{ variant.price | money }}"
                    ></div>
                  {% endunless %}
                {% endfor %}
              </div>
            </div>
            
            <div class="pr-card-title">{{ product.title }}</div>
            <div class="price">
              <div class="text-2" data-variant-price>{{ product.price | money }}</div>
            </div>
          </div>
        </a>
      {% endfor %}
    </div>
  </div>
{% endif %}

<style>
  /* Star Rating Styles */
  .star-rating {
    display: flex;
    align-items: center;
    margin-right: 8px;
    position: relative;
  }

  .stars-outer {
    display: inline-block;
    position: relative;
    font-size: 18px;
    letter-spacing: 2px;
  }

  .stars-outer::before {
    content: "★★★★★";
    color: #ddd;
  }

  .stars-inner {
    position: absolute;
    top: 0;
    left: 0;
    white-space: nowrap;
    overflow: hidden;
  }

  .stars-inner::before {
    content: "★★★★★";
    color: #ECB213;
  }

  .rating-value {
    font-size: 14px;
    margin-left: 5px;
    color: #333;
    font-weight: 500;
  }

  .review-no-box {
    display: flex;
    align-items: center;
    margin-bottom: 8px;
  }

  .review-no {
    font-size: 14px;
    color: #010101;
  }

  /* Variant Selection Styles */
  .color-box {
    margin-bottom: 12px;
  }

  .frame-144 {
    display: flex;
    gap: 10px;
  }

  .color-dot {
    cursor: pointer;
    transition: all 0.3s ease;
    margin-right: 8px;
    display: inline-block;
    opacity: 0.6;
    border: 2px solid transparent;
    box-shadow: 0 0 0 0 rgba(0, 0, 0, 0);
  }

  .color-dot.active {
    opacity: 1;
    transform: scale(1.3);
    border: 2px solid #333;
    box-shadow: 0 0 8px rgba(0, 0, 0, 0.2);
  }

  .color-dot:hover {
    opacity: 0.8;
    transform: scale(1.1);
  }

  /* Existing Hover Effects for Product Card */
  .pr-card .img-box {
    transition: transform 0.3s ease-in-out;
  }

  .pr-card:hover .img-box {
    transform: scale(1.03);
  }

  .product-img {
    width: 100%;
    height: auto;
    transition: transform 0.3s ease-in-out;
  }

  .pr-card:hover .product-img {
    transform: scale(1.09);
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Variant Selection Functionality
    const productCards = document.querySelectorAll('.pr-card');
    
    productCards.forEach(card => {
      const colorDots = card.querySelectorAll('.color-dot');
      const productImg = card.querySelector('[data-variant-image]');
      const priceElement = card.querySelector('[data-variant-price]');
      
      colorDots.forEach(dot => {
        dot.addEventListener('click', function(event) {
          event.preventDefault(); // Prevent navigation from <a> parent
          
          // Remove active class from all dots in this card
          colorDots.forEach(d => d.classList.remove('active'));
          // Add active class to clicked dot
          this.classList.add('active');
          
          // Update image and price
          const variantImage = this.getAttribute('data-image');
          const variantPrice = this.getAttribute('data-price');
          
          if (productImg && variantImage) {
            productImg.src = variantImage;
          }
          if (priceElement && variantPrice) {
            priceElement.textContent = variantPrice;
          }
        });
      });
    });

    // Existing Carousel Functionality
    const nextBtn = document.querySelector('.next-btn');
    const productList = document.querySelector('.list-2');
    
    if (nextBtn && productList) {
      const productCards = document.querySelectorAll('.pr-card');
      let currentIndex = 0;
      const cardWidth = productCards[0] ? productCards[0].offsetWidth : 0;
      const gap = 20;
      
      nextBtn.addEventListener('click', function() {
        if (currentIndex < productCards.length - 1) {
          currentIndex++;
          const scrollAmount = (cardWidth + gap) * currentIndex;
          productList.scrollTo({
            left: scrollAmount,
            behavior: 'smooth'
          });
        } else {
          currentIndex = 0;
          productList.scrollTo({
            left: 0,
            behavior: 'smooth'
          });
        }
      });
    }
  });
</script>

{% schema %}
{
  "name": "Top Selling Products",
  "tag": "section",
  "class": "top-selling",
  "settings": [
    {
      "type": "collection",
      "id": "collection",
      "label": "Top Selling Collection"
    },
    {
      "type": "text",
      "id": "section_title",
      "label": "Section Title",
      "default": "Top Selling"
    },
    {
      "type": "richtext",
      "id": "view_all_text",
      "label": "View All Text",
      "default": "<p>View All</p>"
    },
    {
      "type": "number",
      "id": "products_limit",
      "label": "Number of products to show",
      "default": 5
    }
  ],
  "presets": [
    {
      "name": "Top Selling Products",
      "category": "Featured"
    }
  ]
}
{% endschema %}
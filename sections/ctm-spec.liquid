{% assign product_specs = product.metafields.custom.product_specifications.value %}

{% if product_specs and product_specs != empty %}
  <div id="spec" style="height:0px;width:0px;z-index:-1;"></div>
<div class="top-box">
  <div class="sec-headline-2">{{ section.settings.heading | default: "Specifications" }}</div>
  <div class="sec-subtext-2">{{ section.settings.subheading | default: "Everything you need to know under the hood." }}</div>
</div>

<div class="specs-container">
    <div class="specs-masonry">
      {% for spec in product_specs %}
        <div class="spec-item">
          <div class="spec-title active" onclick="toggleSpecItem(this)">
            <div class="frame-217">
              <img
                src="{{ spec.icon | img_url: '24x24' }}"
                loading="lazy"
                width="24"
                height="24"
                alt="{{ spec.title | escape }}"
                class="frame-style-6"
              />
            </div>
            <div class="title-style-22">{{ spec.title }}</div>
          </div>
          <div class="title-style-23 item-desc-box active">
            {{ spec.specs | metafield_tag }}
          </div>
        </div>
      {% endfor %}
    </div>
</div>

<style>
  .specification:not(:has(.specs-container)) {
    height: 24px !important;
    padding: 24px !important;
  }
  
  .specs-container {
    width: 100%;
  }
  
  /* Masonry grid styles */
  .specs-masonry {
    column-count: 2;
    column-gap: 20px;
    width: 100%;
  }
  
  .spec-item {
    display: inline-block;
    width: 100%;
    margin-bottom: 20px;
    break-inside: avoid;
    page-break-inside: avoid;
    -webkit-column-break-inside: avoid;
  }
  
  .item-desc-box {
    display: none;
    padding: 15px 0;
  }
  
  .item-desc-box.active {
    display: block;
  }
  
  .spec-title {
    cursor: pointer;
    width: 100%;
  }

  @media (max-width: 768px) {
    .specs-masonry {
      column-count: 1;
    }
  }
</style>

<script>
  function toggleSpecItem(element) {
    element.classList.toggle('active');
    element.nextElementSibling.classList.toggle('active');
  }

  document.addEventListener('DOMContentLoaded', function() {
    // Initialize all specs as open by default
    document.querySelectorAll('.spec-title').forEach(title => {
      title.classList.add('active');
      if (title.nextElementSibling) {
        title.nextElementSibling.classList.add('active');
      }
    });
  });
</script>
{% else %}
<style>
  .specification {
    height: 24px !important;
    padding: 24px !important;
  }
</style>
{% endif %}

{% schema %}
{
  "name": "Product Specifications",
  "tag": "section",
  "class": "specification",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Specifications"
    },
    {
      "type": "text",
      "id": "subheading",
      "label": "Subheading",
      "default": "Everything you need to know under the hood."
    }
  ],
  "presets": [
    {
      "name": "Product Specifications",
      "category": "Custom"
    }
  ]
}
{% endschema %}